#include <iostream>
#include <vector>
#include <stdint.h>
#include <RTIMULib.h>
#include "lsm9ds0_yann.h"


LSM9DS0::LSM9DS0() {
    //  using RTIMULib here allows it to use the .ini file generated by RTIMULibDemo.
	 settings = new RTIMUSettings("RTIMULib");

    imu = RTIMU::createIMU(settings);
    
    if ((imu == NULL) || (imu->IMUType() == RTIMU_TYPE_NULL)) {
        printf("No IMU found\n");
        exit(1);
    }

    //  This is an opportunity to manually override any settings before the call IMUInit

    //  set up IMU
    imu->IMUInit();

    //  this is a convenient place to change fusion parameters
    imu->setSlerpPower(0.02);
    imu->setGyroEnable(true);
    imu->setAccelEnable(true);
    imu->setCompassEnable(true);
    
 }
 
 LSM9DS0::~LSM9DS0() {
 }

std::vector<double> LSM9DS0::read() {
	toReturn = std::vector<double>(3);
	
	imu->IMURead();
	RTIMU_DATA imuData = imu->getIMUData();
	
	toReturn[0] = imuData.fusionPose.x();
	toReturn[1] = imuData.fusionPose.y();
	toReturn[2] = imuData.fusionPose.z();
	
	return toReturn;
	
}

